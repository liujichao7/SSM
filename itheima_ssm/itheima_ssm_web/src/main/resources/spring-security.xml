<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security.xsd">



    <!--开启注解使用-->
    <!-- 三种方式: 1. jsr250注解方式 , 2. @secured注解方式 , 3. 表达式的注解方式-->
    <security:global-method-security jsr250-annotations="enabled" secured-annotations="enabled" pre-post-annotations="enabled" />

    <!--配置不过滤的资源-->
    <security:http pattern="/login.jsp" security="none"/>  <!--登录页面-->
    <security:http pattern="/failer.jsp" security="none"/>  <!--失败页面-->
    <security:http pattern="/css/**" security="none"/>       <!--静态资源-->
    <security:http pattern="/img/**" security="none"/>
    <security:http pattern="/plugins/**" security="none"/>


    <!--
        配置具体规则
            auto-config="true"	不用自己编写登录的页面，框架提供默认登录页面
    	    use-expressions="false"	是否使用SPEL表达式（没学习过）
    -->

    <security:http auto-config="true" use-expressions="false">

        <!-- 配置具体的拦截的规则 pattern="请求路径的规则" access="访问系统的人，必须有ROLE_USER的角色" -->
        <security:intercept-url pattern="/**" access="ROLE_USER,ROLE_ADMIN"/>

        <!--
            配置登录跳转的各种页面
                依次为: 登录页面 , 登录访问路径 , 默认登陆成功却权限认证失败后跳转的页面(中间情况) ,
                        登录失败页面 , 指定登录成功页面
         -->
        <security:form-login
                login-page="/login.jsp"
                login-processing-url="/login.do"
                default-target-url="/index.jsp"
                authentication-failure-url="/failer.jsp"
                authentication-success-forward-url="/pages/main.jsp"
        />

        <!--关闭跨域(服务器)请求  ()-->
        <security:csrf disabled="true"/>

        <!--退出-->
        <security:logout invalidate-session="true" logout-url="/logout.do" logout-success-url="/login.jsp" />
    </security:http>

    <!--配置认证操作的service , 切换用户名和密码, 实现框架对查询到的资源的封装 , 让框架来进行安全认证-->
    <security:authentication-manager>
        <security:authentication-provider user-service-ref="userService">
           <!-- 配置加密的方式-->
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>

    <!-- 配置加密类 -->
    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    <!--配置支持页面表达式的应用-->
    <bean id="webSecurityExpressionHandler" class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler"></bean>
</beans>